<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.micromoving.bcp.modules.hr.dao.InsuranceTransferDao">
	<sql id="insuranceTransferColumns">
		a.id,
		a.employee_id,
		a.insurance_id,
		a.start_date,
		a.end_date,
		a.original_insured_unit,
		a.del_flag,
		b.insurance_id as "insuranceRule.insurance_id",
		b.unitProportion as "insuranceRule.unitProportion",
		b.peopleProportion as "insuranceRule.peopleProportion"
	</sql>
	
	<sql id="insuranceTransferJoins">
		LEFT JOIN hr_insurance_rule b ON b.insurance_id = a.insurance_id
		LEFT JOIN hr_insurance_rule b ON b.unitProportion = a.unitProportion
		LEFT JOIN hr_insurance_rule b ON b.peopleProportion = a.peopleProportion
	</sql>
	
	<!--根据用户编号查询用户参保信息-->
    <select id="get" resultType="InsuranceTransfer">
        SELECT
	        <include refid="insuranceTransferColumns"/>
	    FROM hr_insurance_transfer a
	    WHERE a.id = #{id} AND a.del_flag = #{DEL_FLAG_NORMAL}
    </select>
    
    <!--分页查询-->
    <select id="findList" resultType="InsuranceTransfer">
		SELECT
			<include refid="insuranceTransferColumns"/>
		FROM hr_insurance_transfer a
		<include refid="insuranceTransferJoins"/>
		WHERE a.user_id = #{user.id} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select> 
	
	<!--全部查询-->
	<select id="findAllList" resultType="InsuranceRecord">
		SELECT
			<include refid="insuranceTransferColumns"/>
		FROM hr_insuranceRecord a
		<include refid="insuranceTransferJoins"/>
		WHERE a.user_id = #{user.id} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<!--增加用户参保信息-->
    <insert id="insert">
        INSERT INTO hr_insurance_transfer(
         	id,
			employee_id,
			insurance_id,
			start_date,
			end_date,
			original_insured_unit,
			del_flag		
        )VALUES(
	        #{id},
            #{employee.id},
		    #{insurancId},
		    #{startDate},
		    #{endDate},
		    #{originalInsuredUnit},
		    #{delFlag}
	    )
    </insert>
    
     <!-- 更新用户参保信息 -->
    <update id="update">
		UPDATE hr_insurance_transfer SET 
			id = #{id},
            employee_id = #{employee.id},
		    insurance_id=#{insuranceId},													
			start_date=#{startDate},													
			end_date=#{endDate},											
			original_insured_unit=#{originalInsuredUnit},
			del_flag=#{delFlag}
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除用户参保信息 -->
	<update id="delete">
		UPDATE hr_insurance_transfer SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>