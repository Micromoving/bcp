<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.micromoving.bcp.modules.hr.dao.InsuredSituationDao">
	
	<sql id="insuredSituationColumns">
		A . ID,
		a.employee_id as "user.id",
		b.user_no as "employee.userNo",
		u.name as "user.name",
		A .insurance_id AS "insuranceRule.id",
		r.insurance_type AS "insuranceRule.insuranceType",
		A .insured_date,
		A .school_insured_date,
		A .insured_year,
		A .base,
		A .del_flag,
		A.social_insurance_id,
		r.unit_proportion as "insuranceRule.unitProportion",
		r.people_proportion as "insuranceRule.peopleProportion"
	</sql>
	
	<sql id="insuredSituationJoins">
	   LEFT JOIN hr_insurance_rule r ON r. ID = A .insurance_id
 	   LEFT JOIN hr_user_employee b ON b. ID = A .employee_id
 	   LEFT JOIN sys_user u on u.id = a.employee_id
	</sql>
	
	<!--根据用户编号查询用户参保信息-->
    <select id="get" resultType="InsuredSituation">
        SELECT
	        <include refid="insuredSituationColumns"/>
	    FROM hr_insured_situation a
	    <include refid="insuredSituationJoins"/>
	    WHERE a.id = #{id}
    </select>
    <!--根据用户编号查询用户参保信息-->
    <select id="count" resultType="int">
        SELECT
			COUNT (*)
		FROM
			hr_insured_situation 
		WHERE
			employee_id=#{user.id}AND insurance_id=#{insuranceRule.id}
    </select>
    
    <!--分页查询-->
    <select id="findList" resultType="InsuredSituation">
		SELECT
			<include refid="insuredSituationColumns"/>
		FROM hr_insured_situation a
		<include refid="insuredSituationJoins"/>
		WHERE a.employee_id = #{user.id} AND a.del_flag = #{DEL_FLAG_NORMAL}
		order by insurance_id asc
	</select> 
	
	<!--全部查询-->
	<select id="findAllList" resultType="InsuredSituation">
		SELECT
			<include refid="insuredSituationColumns"/>
		FROM hr_insured_situation a
		<include refid="insuredSituationJoins"/>
		WHERE  a.del_flag = #{DEL_FLAG_NORMAL}
		order by b.user_no asc
	</select>
	
	<!--增加用户参保信息-->
    <insert id="insert">
        INSERT INTO hr_insured_situation(
         	id,
			employee_id,
			insurance_id,
			insured_date,
			school_insured_date,
			insured_year,
			base,
			del_flag,
			social_insurance_id
        )VALUES(
	        #{id},  
	        #{user.id},     
		    #{insuranceRule.id},
		    #{insuredDate},
		    #{schoolInsuredDate},
		    #{insuredYear},
		    #{base},
		    #{delFlag},
		    #{socialInsuranceId}
	    )
	    </insert>
	
	<!-- 更新用户参保信息 -->
    <update id="update">
		UPDATE hr_insured_situation SET 
			id = #{id},
			employee_id= #{user.id},
		    insurance_id=#{insuranceRule.id},													
			insured_date=#{insuredDate},													
			school_insured_date=#{schoolInsuredDate},											
			insured_year=#{insuredYear},
			base=#{base},
			del_flag=#{delFlag},
			social_insurance_id=  #{socialInsuranceId}
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除用户参保信息 -->
	<update id="delete">
		UPDATE hr_insured_situation SET
			del_flag = #{DEL_FLAG_DELETE} 
		WHERE id = #{id}
	</update>
	
</mapper>