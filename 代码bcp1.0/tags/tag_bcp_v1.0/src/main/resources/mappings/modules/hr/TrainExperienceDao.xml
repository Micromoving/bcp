<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.micromoving.bcp.modules.hr.dao.TrainExperienceDao">
	<sql id="trainExperienceColumns">
	    a.id,
	    o.id as "office.id",
	    o.name AS "office.name",
	    u.id as "user.id",
	    u.name as "user.name",
		a.employee_id,
		a.training_type,													
		a.training_cycle,													
		a.is_home,													
		a.training_agency,													
		a.training_place,													
		a.training_course,													
		a.training_content,													
		a.start_date,
		a.end_date,
		a.training_mode,													
		a.has_certificate,													
		a.certificate_id,													
		a.training_etc,													
		a.training_funds,													
		a.funds_origin,													
		a.leave_date,													
		a.return_date,													
		a.loan,													
		a.loan_date,													
		a.wipeout,													
		a.wipeout_date,													
		a.wipeout_detail,													
		a.del_flag,
		a.update_by as "updateBy.id",
		a.update_date,
		a.process_instance_id,
		a.process_instance_id as "act.procInsId",
		a.data_state,
		a.create_by as "createBy.id",
		a.create_date,
		e.gender as "employee.gender",
		pro.max_name as "protp.name",
        pro.max_TECH_POSITION_LEVEL as  "protp.techPositionLevel"
		</sql>												
		
	<sql id="trainExperienceJoins">
	    LEFT JOIN sys_user u ON u.id = a.employee_id
		LEFT JOIN sys_office o ON o.id = u.office_id
		left join hr_user_employee e on e.id=a.employee_id
		LEFT JOIN (
			SELECT
			P .employee_id,
			MAX (P .name) max_name,
			Max (P .TECH_POSITION_LEVEL) max_TECH_POSITION_LEVEL
			FROM
			HR_PRO_TECH_POSITION P
			WHERE
			del_flag = 0
			GROUP BY
			P .EMPLOYEE_ID
		) pro ON PRO.employee_id = a . employee_id
    </sql>
    
        <!--根据用户编号查询用户培训经历表信息-->
    <select id="get" resultType="trainExperience">
        SELECT
	        <include refid="trainExperienceColumns"/>
	    FROM hr_train_experience a
	    <include refid="trainExperienceJoins"/>
	    WHERE a.id = #{id}
    </select>
    
	<!-- 全部查询 -->
     <select id="findAllList" resultType="TrainExperience">
		SELECT
			<include refid="trainExperienceColumns"/>
		FROM hr_train_experience a
		<include refid="trainExperienceJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
  
    <!-- 分页查询 -->
    <select id="findList" resultType="TrainExperience">
		SELECT
			<include refid="trainExperienceColumns"/>
		FROM hr_train_experience a
		<include refid="trainExperienceJoins"/>
		WHERE  a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	<!-- 根据流程实例ID，取得培训实体记录。 -->
	<select id="getByProcInsId" resultType="TrainExperience">
		SELECT
		<include refid="trainExperienceColumns" />
		FROM hr_train_experience a
		<include refid="trainExperienceJoins" />
		WHERE a.process_instance_id = #{act.procInsId}
	</select>
	
	    <!--增加用户培训经历表信息-->
    <insert id="insert">
        INSERT INTO hr_train_experience(
        	id,
			employee_id,
			training_type,													
			training_cycle,													
			is_home,													
			training_agency,													
			training_place,													
			training_course,													
			training_content,													
			start_date,
			end_date,
			training_mode,													
			has_certificate,													
			certificate_id,													
			training_etc,													
			training_funds,													
			funds_origin,													
			leave_date,													
			return_date,													
			loan,													
			loan_date,													
			wipeout,													
			wipeout_date,													
			wipeout_detail,													
			del_flag,
			create_by,
			create_date,
			update_by,
			update_date,
			process_instance_id,
			data_state
        )VALUES(
        	#{id},
		    #{user.id},
	        #{trainingType},													
			#{trainingCycle},												
			#{isHome},													
			#{trainingAgency},													
			#{trainingPlace},													
			#{trainingCourse},													
			#{trainingContent},													
			#{startDate},
			#{endDate},
			#{trainingMode},													
			#{hasCertificate},													
			#{certificateId},													
			#{trainingEtc},													
			#{trainingFunds},													
			#{fundsOrigin},													
			#{leaveDate},													
			#{returnDate},													
			#{loan},													
			#{loanDate},													
			#{wipeout},													
			#{wipeoutDate},													
			#{wipeoutDetail},													
		    #{delFlag},
		    #{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{act.procInsId},
			#{dataState}
	    )
    </insert>
    
    <!-- 更新用户培训经历表信息 -->
    <update id="update">
		UPDATE hr_train_experience SET 
			id = #{id},
			employee_id = #{user.id},
			training_type = #{trainingType},												
			training_cycle = #{trainingCycle},												
			is_home = #{isHome},													
			training_agency = #{trainingAgency},													
			training_place = #{trainingPlace},													
			training_course = #{trainingCourse},													
			training_content = #{trainingContent},													
			start_date = #{startDate},
			end_date = #{endDate},
			training_mode = #{trainingMode},													
			has_certificate = #{hasCertificate},													
			certificate_id = #{certificateId},													
			training_etc = #{trainingEtc},													
			training_funds = #{trainingFunds},													
			funds_origin = #{fundsOrigin},												
			leave_date = #{leaveDate},													
			return_date = #{returnDate},													
			loan = #{loan},													
			loan_date = #{loanDate},													
			wipeout = #{wipeout},														
			wipeout_date = #{wipeoutDate},													
			wipeout_detail = #{wipeoutDetail},													
			del_flag=#{delFlag},
			process_instance_id=#{act.procInsId},
			create_by=#{createBy.id},
			create_date=#{createDate},
			update_by=#{updateBy.id},
			update_date=#{updateDate},
			data_state = #{dataState}
		WHERE id = #{id}
	</update>

    <!--删除用户培训经历表信息-->
 	<update id="delete">
		UPDATE hr_train_experience SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

</mapper>